{"version":3,"file":"index.js","sources":["src/ignore.js","src/arrowfn.js","src/linkage.js","src/join2.js","src/InnerTree.js","src/join.js","src/delegate.js","src/csx.js","src/render.js","src/Tree.js","src/index.js"],"sourcesContent":["import homunculus from 'homunculus';\n\nlet ES6Token = homunculus.getClass('token', 'js');\nlet Token = homunculus.getClass('token', 'csx');\nlet Node = homunculus.getClass('node', 'csx');\n\nlet S = {};\nS[Token.LINE] = S[Token.COMMENT] = S[Token.BLANK] = true;\n\nlet res;\nlet append;\n\nfunction ignore(node, includeLine) {\n  if(node instanceof Token || node instanceof ES6Token) {\n    if(node.isVirtual()) {\n      return;\n    }\n    node.ignore = true;\n    append = '';\n    while(node = node.next()) {\n      if(node.isVirtual() || !S.hasOwnProperty(node.type())) {\n        break;\n      }\n      let s = node.content();\n      res += s;\n      append += s;\n      if(includeLine || s != '\\n') {\n        node.ignore = true;\n      }\n    }\n  }\n  else if(node.isToken()) {\n    ignore(node.token(), includeLine);\n  }\n  else {\n    node.leaves().forEach(function(leaf) {\n      ignore(leaf, includeLine);\n    });\n  }\n}\n\nfunction parse(node, includeLine) {\n  res = '';\n  append = '';\n  ignore(node, includeLine);\n  return { res, append };\n}\n\nparse.S = S;\n\nexport default parse;","import homunculus from 'homunculus';\nimport linkage from './linkage';\n\nlet Token = homunculus.getClass('token', 'csx');\nlet Node = homunculus.getClass('node', 'csx');\n\nfunction parse(node, res, param, opt) {\n  switch(node.name()) {\n    case Node.EXPRSTMT:\n      linkage(node.first(), param, opt).arr.forEach((item) => {\n        res[item] = true;\n      });\n      break;\n    case Node.VARSTMT:\n      node.leaves().forEach((leaf, i) => {\n        if(i % 2 === 1) {\n          let initlz = leaf.leaf(1);\n          let temp = linkage(initlz.leaf(1), param, opt);\n          temp.arr.forEach((item) => {\n            res[item] = true;\n          });\n        }\n      });\n      break;\n    case Node.BLOCKSTMT:\n      let block = node.first();\n      for(let i = 1, leaves = block.leaves(); i < leaves.length - 1; i++) {\n        parse(leaves[i], res, param, opt);\n      }\n      break;\n    case Node.IFSTMT:\n      let condition = node.leaf(2);\n      linkage(condition, param, opt).arr.forEach((item) => {\n        res[item] = true;\n      });\n      parse(node.last(), res, param, opt);\n      break;\n    case Node.ITERSTMT:\n      let peek = node.first().token().content();\n      if(peek === 'for') {\n        let first = node.leaf(2);\n        // for(;...\n        if(first.isToken()) {}\n        else {\n          if(first.name() === Node.LEXDECL) {\n            parse(first, res, param, opt);\n          }\n          else if(first.name() === Node.VARSTMT) {\n            parse(first, res, param, opt);\n          }\n        }\n        let second = node.leaf(3);\n        // for(;;...\n        if(second.isToken()) {}\n        else {\n          let temp = linkage(second, param, opt);\n          temp.arr.forEach((item) => {\n            res[item] = true;\n          });\n        }\n        let third = node.leaf(4);\n        if(third.isToken()) {\n          third = node.leaf(5);\n          if(third.isToken()) {}\n          else {\n            let temp = linkage(third, param, opt);\n            temp.arr.forEach((item) => {\n              res[item] = true;\n            });\n          }\n        }\n        else {\n          let temp = linkage(third, param, opt);\n          temp.arr.forEach((item) => {\n            res[item] = true;\n          });\n        }\n      }\n      else if(peek === 'do') {\n        let blockstmt = node.leaf(1);\n        parse(blockstmt, res, param, opt);\n        let temp = linkage(node.leaf(4), param, opt);\n        temp.arr.forEach((item) => {\n          res[item] = true;\n        });\n      }\n      else if(peek === 'while') {\n        let temp = linkage(node.leaf(2), param, opt);\n        temp.arr.forEach((item) => {\n          res[item] = true;\n        });\n        let stmt = node.last();\n        parse(stmt, res, param, opt);\n      }\n      break;\n    case Node.LEXDECL:\n      node.leaves().forEach((leaf, i) => {\n        if(i % 2 === 1) {\n          let initlz = leaf.leaf(1);\n          let temp = linkage(initlz.leaf(1), param, opt);\n          temp.arr.forEach((item) => {\n            res[item] = true;\n          });\n        }\n      });\n      break;\n    case Node.RETSTMT:\n      // 第一层arrowFn的return语句不包含在linkage中，还有递归return的arrowFn也是\n      if(opt.arrowFn.length > 0) {\n        let allReturn = true;\n        for(let i = 0, len = opt.arrowFn.length; i < len; i++) {\n          if(!opt.arrowFn[i]) {\n            allReturn = false;\n            break;\n          }\n        }\n        if(!allReturn) {\n          linkage(node.leaf(1), param, opt).arr.forEach((item) => {\n            res[item] = true;\n          });\n        }\n      }\n      break;\n    case Node.WITHSTMT:\n      linkage(node.leaf(2), param, opt).arr.forEach((item) => {\n        res[item] = true;\n      });\n      let blockstmt = node.last();\n      parse(blockstmt, res, param, opt);\n      break;\n    case Node.SWCHSTMT:\n      linkage(node.leaf(2), param, opt).arr.forEach((item) => {\n        res[item] = true;\n      });\n      let caseblock = node.last();\n      parse(caseblock, res, param, opt);\n      break;\n    case Node.CASEBLOCK:\n      let leaves = node.leaves();\n      for(let i = 1; i < leaves.length - 1; i++) {\n        let leaf = leaves[i];\n        if(leaf.name() === Node.CASECLAUSE) {\n          let expr = leaf.leaf(1);\n          let temp = linkage(expr, param, opt);\n          temp.arr.forEach((item) => {\n            res[item] = true;\n          });\n          parse(leaf.last(), res, param, opt);\n        }\n        else if(leaf.name() === Node.DFTCLAUSE) {\n          parse(leaf.last(), res, param, opt);\n        }\n      }\n      break;\n  }\n}\n\nexport default function(node, res, param, opt) {\n  node.leaves().forEach((leaf) => {\n    parse(leaf, res, param, opt);\n  });\n};\n","import homunculus from 'homunculus';\nimport arrowfn from './arrowfn';\n\nlet Token = homunculus.getClass('token', 'csx');\nlet Node = homunculus.getClass('node', 'csx');\n\nfunction parse(node, res, param, opt) {\n  if(node.isToken()) {\n  }\n  else {\n    switch(node.name()) {\n      case Node.EXPR:\n        parse(node.first(), res, param, opt);\n        //可能有连续多个表达式\n        for(let i = 2, leaves = node.leaves(), len = leaves.length; i < len; i += 2) {\n          parse(node.leaf(i), res, param, opt);\n        }\n        break;\n      case Node.PRMREXPR:\n        parse(node.first(), res, param, opt);\n        break;\n      case Node.MMBEXPR:\n        mmbexpr(node, res, param, opt);\n        break;\n      case Node.CNDTEXPR:\n        parse(node.first(), res, param, opt);\n        parse(node.leaf(2), res, param, opt);\n        parse(node.last(), res, param, opt);\n        break;\n      case Node.LOGOREXPR:\n      case Node.LOGANDEXPR:\n      case Node.BITANDEXPR:\n      case Node.BITOREXPR:\n      case Node.BITXOREXPR:\n      case Node.EQEXPR:\n      case Node.RELTEXPR:\n      case Node.SHIFTEXPR:\n      case Node.ADDEXPR:\n      case Node.MTPLEXPR:\n        parse(node.first(), res, param, opt);\n        //可能有连续多个表达式\n        for(let i = 2, leaves = node.leaves(), len = leaves.length; i < len; i += 2) {\n          parse(node.leaf(i), res, param, opt);\n        }\n        break;\n      case Node.UNARYEXPR:\n      case Node.NEWEXPR:\n        parse(node.last(), res, param, opt);\n        break;\n      case Node.POSTFIXEXPR:\n        parse(node.first(), res, param, opt);\n        break;\n      case Node.CALLEXPR:\n        callexpr(node, res, param, opt);\n        break;\n      case Node.ARRLTR:\n        arrltr(node, res, param, opt);\n        break;\n      case Node.CPEAPL:\n        cpeapl(node, res, param, opt);\n        break;\n      case Node.ARGS:\n        parse(node.leaf(1), res, param, opt);\n        break;\n      case Node.ARGLIST:\n      case Node.TEMPLATE:\n        for(let i = 0, leaves = node.leaves(), len = leaves.length; i < len; i++) {\n          let leaf = node.leaf(i);\n          if(!leaf.isToken()) {\n            parse(leaf, res, param, opt);\n          }\n        }\n        break;\n      case Node.ARROWFN:\n        opt.arrowFn = opt.arrowFn || [];\n        let temp = node.parent();\n        if(temp && temp.name() === Node.ARGLIST) {\n          temp = temp.parent();\n          if(temp && temp.name() === Node.ARGS) {\n            temp = temp.prev();\n            if(temp && temp.name() === Node.MMBEXPR) {\n              let callexpr = temp.parent();\n              temp = temp.leaf(2);\n              if(temp.isToken() && temp.token().content() === 'map') {\n                let body = node.last().leaf(1);\n                if(opt.arrowFn.length === 0) {\n                  opt.arrowFn.push(true);\n                }\n                else {\n                  opt.arrowFn.push(callexpr.parent().name() === Node.RETSTMT);\n                }\n                arrowfn(body, res, param, opt);\n                opt.arrowFn.pop();\n              }\n            }\n          }\n        }\n        break;\n      case Node.CSXElement:\n        parse(node.first(), res, param, opt);\n        for(let i = 1, leaves = node.leaves(); i < leaves.length - 1; i++) {\n          parse(leaves[i], res, param, opt);\n        }\n        break;\n      case Node.CSXSelfClosingElement:\n      case Node.CSXOpeningElement:\n        for(let i = 1, leaves = node.leaves(); i < leaves.length - 1; i++) {\n          parse(leaves[i], res, param, opt);\n        }\n        break;\n      case Node.CSXAttribute:\n        let value = node.last();\n        if(value.name() === Node.CSXAttributeValue) {\n          let first = value.first();\n          if(first.isToken() && first.token().content() === '{') {\n            parse(value.leaf(1), res, param, opt);\n          }\n        }\n        break;\n      case Node.CSXChild:\n        node.leaves().forEach((leaf) => {\n          parse(leaf, res, param, opt);\n        });\n        break;\n    }\n  }\n}\nfunction mmbexpr(node, res, param, opt) {\n  let prmr = node.first();\n  if(prmr.name() === Node.PRMREXPR) {\n    let first = prmr.first();\n    if(first.isToken()) {\n      let me = first.token().content();\n      if(me === 'this') {\n        let dot = node.leaf(1);\n        if(dot.isToken()) {\n          if(dot.token().content() === '.') {\n            let token = dot.next();\n            let id = token.token().content();\n            if(id === 'model') {\n              if(node.name() === Node.MMBEXPR) {\n                let next = node.next();\n                if(next.isToken()) {\n                  if(next.token().content() === '.') {\n                    next = next.next();\n                    if(next.isToken()) {\n                      let token = next.token();\n                      res['model.' + token.content()] = true;\n                    }\n                  }\n                  else if(next.token().content() === '[') {\n                    let expr = next.next();\n                    if(expr.name() === Node.PRMREXPR) {\n                      let s = expr.first();\n                      if(s.isToken()) {\n                        s = s.token();\n                        if(s.type() === Token.STRING) {\n                          res['model.' + s.val()] = true;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            else {\n              res[id] = true;\n            }\n          }\n          else if(dot.token().content() === '[') {\n            let expr = dot.next();\n            if(expr.name() === Node.EXPR) {\n              parse(expr.last(), res, param, opt);\n            }\n            else if(expr.name() === Node.PRMREXPR) {\n              let s = expr.first();\n              if(s.isToken()) {\n                s = s.token();\n                if(s.type() === Token.STRING) {\n                  res[s.val()] = true;\n                }\n              }\n            }\n            else {\n              parse(expr, res, param, opt);\n            }\n          }\n        }\n      }\n      else {\n        let bracket = node.leaf(1);\n        if(bracket.isToken()) {\n          if(bracket.token().content() === '[') {\n            let expr = bracket.next();\n            if(expr.name() === Node.EXPR) {\n              parse(expr.last(), res, param, opt);\n            }\n            else {\n              parse(expr, res, param, opt);\n            }\n          }\n        }\n      }\n    }\n    else {\n      parse(first, res, param, opt);\n    }\n  }\n  else if(prmr.name() === Node.MMBEXPR) {\n    mmbexpr(prmr, res, param, opt);\n    let dot = prmr.next();\n    if(dot.isToken() && dot.token().content() === '[') {\n      let expr = dot.next();\n      if(expr.name() === Node.EXPR) {\n        parse(expr.last(), res, param, opt);\n      }\n      else if(expr.name() === Node.PRMREXPR) {\n        let s = expr.first();\n        if(s.isToken()) {\n          s = s.token();\n          if(s.type() === Token.STRING) {\n            res[s.val()] = true;\n          }\n        }\n      }\n      else {\n        parse(expr, res, param, opt);\n      }\n    }\n  }\n  else {\n    parse(prmr, res, param, opt);\n  }\n}\nfunction callexpr(node, res, param, opt) {\n  parse(node.first(), res, param, opt);\n  let args = node.last();\n  if(args.name() === Node.ARGS) {\n    args.leaf(1).leaves().forEach(function(leaf, i) {\n      if(i % 2 === 0) {\n        parse(leaf, res, param, opt);\n      }\n    });\n  }\n}\n\nfunction arrltr(node, res, param, opt) {\n  node.leaves().forEach(function(leaf, i) {\n    if(i % 2 === 1) {\n      if(!leaf.isToken()) {\n        parse(leaf, res, param, opt);\n      }\n    }\n  });\n}\n\nfunction cpeapl(node, res, param, opt) {\n  if(node.size() > 2) {\n    let leaf = node.leaf(1);\n    if(!leaf.isToken()) {\n      parse(leaf, res, param, opt);\n    }\n  }\n}\n\nexport default function(node, param, opt) {\n  let res = {};\n  // 取得全部this.xxx\n  parse(node, res, param, opt);\n  let arr = Object.keys(res);\n  let bind = false;\n  arr = arr.filter(function(item) {\n    //model.xxx全部通过\n    if(item.indexOf('model.') === 0) {\n      bind = true;\n      return true;\n    }\n    //没get不通过\n    if(!(param.getHash || {}).hasOwnProperty(item)) {\n      return false;\n    }\n    //有get需要有bind或link\n    return (param.bindHash || {}).hasOwnProperty(item) || (param.evalHash || {}).hasOwnProperty(item) || (param.linkHash || {}).hasOwnProperty(item);\n  });\n  // 只要有一个是双向绑定就是双向\n  arr.forEach((item) => {\n    if((param.bindHash || {}).hasOwnProperty(item)) {\n      bind = true;\n    }\n  });\n  // 因特殊Array优化需要，this.v或者(..., this.v)形式的侦听变量\n  // see https://github.com/migijs/migi/issues/29\n  let single = false;\n  if(node.name() === Node.MMBEXPR\n    && node.leaves().length === 3\n    && node.first().name() === Node.PRMREXPR) {\n    single = arr.length === 1\n      && node.first().first().isToken()\n      && node.first().first().token().content() === 'this'\n      && node.last().isToken()\n      && node.last().token().content() === arr[0];\n  }\n  else if(node.name() === Node.MMBEXPR\n    && node.leaves().length === 3\n    && node.first().name() === Node.MMBEXPR\n    && node.first().leaves().length === 3\n    && node.first().first().name() === Node.PRMREXPR) {\n    single = arr.length === 1\n      && node.first().first().first().isToken()\n      && node.first().first().first().token().content() === 'this'\n      && node.first().last().isToken()\n      && node.first().last().token().content() === 'model'\n      && node.last().isToken()\n      && node.last().token().content() === arr[0].slice(6);\n  }\n  else if(node.name() === Node.PRMREXPR\n    && node.first().name() === Node.CPEAPL) {\n    let cpeapl = node.first();\n    if(cpeapl.leaves().length === 3\n      && cpeapl.leaf(1).name() === Node.EXPR) {\n      let expr = cpeapl.leaf(1);\n      if(expr.last().name() === Node.MMBEXPR) {\n        let mmbexpr = expr.last();\n        if(mmbexpr.leaves().length === 3\n          && mmbexpr.first().name() === Node.PRMREXPR\n          && mmbexpr.last().isToken()) {\n          single = arr.length\n            && mmbexpr.first().first().isToken()\n            && mmbexpr.first().first().token().content() === 'this'\n            && mmbexpr.last().token().content() === arr[arr.length - 1];\n        }\n      }\n    }\n    else if(cpeapl.leaves().length === 3\n      && cpeapl.leaf(1).name() === Node.MMBEXPR\n      && cpeapl.first().isToken()\n      && cpeapl.first().token().content() === '(') {\n      let mmbexpr = cpeapl.leaf(1);\n      if(mmbexpr.leaves().length === 3\n        && mmbexpr.first().name() === Node.PRMREXPR\n        && mmbexpr.last().isToken()) {\n        single = arr.length\n          && mmbexpr.first().first().isToken()\n          && mmbexpr.first().first().token().content() === 'this'\n          && mmbexpr.last().token().content() === arr[arr.length - 1];\n      }\n    }\n  }\n  return {\n    arr,\n    single,\n    bind,\n  };\n};\n","import homunculus from 'homunculus';\n\nlet Token = homunculus.getClass('token', 'csx');\n\nlet S = {};\nS[Token.LINE] = S[Token.COMMENT] = S[Token.BLANK] = true;\n\nlet res;\n\nfunction recursion(node, excludeLine) {\n  if(node.isToken()) {\n    let token = node.token();\n    if(!token.isVirtual()) {\n      res += token.content();\n      while(token.next()) {\n        token = token.next();\n        if(token.isVirtual() || !S.hasOwnProperty(token.type())) {\n          break;\n        }\n        let s = token.content();\n        if(!excludeLine || s != '\\n') {\n          res += token.content();\n        }\n      }\n    }\n  }\n  else {\n    node.leaves().forEach(function(leaf) {\n      recursion(leaf, excludeLine);\n    });\n  }\n}\n\nexport default function(node, excludeLine) {\n  res = '';\n  recursion(node, excludeLine);\n  return res;\n}","import homunculus from 'homunculus';\nimport csx from './csx';\nimport ignore from './ignore';\nimport linkage from './linkage';\nimport join2 from './join2';\n\nlet Token = homunculus.getClass('token', 'csx');\nlet Node = homunculus.getClass('node', 'csx');\n\nclass InnerTree {\n  constructor(opt = {}, param = {}) {\n    this.res = '';\n    this.opt = opt;\n    this.param = param;\n  }\n\n  parse(node) {\n    this.recursion(node);\n    return this.res;\n  }\n  recursion(node) {\n    let self = this;\n    let isToken = node.isToken();\n    if(isToken) {\n      let token = node.token();\n      if(token.isVirtual()) {\n        return;\n      }\n      if(!token.ignore) {\n        this.res += token.content();\n      }\n      while(token.next()) {\n        token = token.next();\n        if(token.isVirtual() || !ignore.S.hasOwnProperty(token.type())) {\n          break;\n        }\n        if(!token.ignore) {\n          this.res += token.content();\n        }\n      }\n    }\n    else {\n      switch(node.name()) {\n        case Node.CSXElement:\n        case Node.CSXSelfClosingElement:\n          this.res += csx(node, {\n            isInBind: self.opt.isInBind || self.opt.isBind,\n            arrowFn: self.opt.arrowFn,\n          }, self.param);\n          return;\n        case Node.RETSTMT:\n          if(self.opt.isBind || self.opt.isInBind) {\n            let allReturn = true;\n            self.opt.arrowFn = self.opt.arrowFn || [];\n            for(let i = 0, len = self.opt.arrowFn.length; i < len; i++) {\n              if(!self.opt.arrowFn[i]) {\n                allReturn = false;\n                break;\n              }\n            }\n            if(allReturn) {\n              let temp = linkage(node.leaf(1), self.param, {\n                arrowFn: self.opt.arrowFn,\n              });\n              let list = temp.arr;\n              let listener = list.length === 1\n                ? ('\"' + list[0] + '\"')\n                : JSON.stringify(list);\n              if(list.length) {\n                return this.res += join2(node.first()) + 'new yurine.Obj('\n                  + listener\n                  + ',()=>{return('\n                  + new InnerTree(self.opt, self.param).parse(node.leaf(1)).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1')\n                  + ')})';\n              }\n            }\n          }\n          break;\n        case Node.ARROWFN:\n          self.opt.arrowFn = self.opt.arrowFn || [];\n          if(self.opt.arrowFn.length === 0) {\n            self.opt.arrowFn.push(true);\n          }\n          else {\n            let is = false;\n            let temp = node.parent();\n            if(temp && temp.name() === Node.ARGLIST) {\n              temp = temp.parent();\n              if(temp && temp.name() === Node.ARGS) {\n                let callexpr = temp.parent();\n                temp = temp.prev();\n                if(temp && temp.name() === Node.MMBEXPR) {\n                  temp = temp.leaf(2);\n                  if(temp.isToken() && temp.token().content() === 'map') {\n                    is = callexpr.parent().name() === Node.RETSTMT;\n                  }\n                }\n              }\n            }\n            self.opt.arrowFn.push(is);\n          }\n          break;\n      }\n      node.leaves().forEach(function(leaf) {\n        self.recursion(leaf);\n      });\n      switch(node.name()) {\n        case Node.ARROWFN:\n          self.opt.arrowFn.pop();\n          break;\n      }\n    }\n  }\n}\n\nexport default InnerTree;\n","import homunculus from 'homunculus';\n\nlet JsNode = homunculus.getClass('Node', 'es6');\nlet Token = homunculus.getClass('Token');\n\nexport default function(node, word) {\n  let res = recursion(node, { 's': '', 'word': word });\n  return res.s;\n};\n\nfunction recursion(node, res) {\n  let isToken = node.name() === JsNode.TOKEN;\n  let isVirtual = isToken && node.token().type() === Token.VIRTUAL;\n  if(isToken) {\n    let token = node.token();\n    if(!isVirtual) {\n      if(res.word && [Token.ID, Token.NUMBER, Token.KEYWORD].indexOf(token.type()) > -1) {\n        res.s += ' ';\n      }\n      if(token.content() === '}' && res.s.charAt(res.s.length - 1) === ';') {\n        res.s = res.s.replace(/;$/, '');\n      }\n      res.s += token.content();\n      res.word = [Token.ID, Token.NUMBER, Token.KEYWORD].indexOf(token.type()) > -1;\n    }\n    else if(token.content() === ';') {\n      res.s += ';';\n      res.word = false;\n    }\n  }\n  else {\n    node.leaves().forEach(function(leaf) {\n      recursion(leaf, res);\n    });\n  }\n  return res;\n}","import homunculus from 'homunculus';\nimport InnerTree from './InnerTree';\n\nlet Token = homunculus.getClass('token', 'csx');\nlet Node = homunculus.getClass('node', 'csx');\n\nlet S = {};\nS[Token.LINE] = S[Token.COMMENT] = S[Token.BLANK] = true;\n\nlet res = '';\n\nfunction parse(node) {\n  let prmr = node.leaf(1);\n  if(prmr && prmr.name() === Node.PRMREXPR) {\n    let objltr = prmr.first();\n    let tree = new InnerTree();\n    res = tree.parse(node);\n    res = res.replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1');\n  }\n  else {\n    let tree = new InnerTree();\n    res = tree.parse(node);\n    res = res.replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1');\n  }\n  return res;\n}\n\nexport default parse;\n","import homunculus from 'homunculus';\nimport InnerTree from './InnerTree';\nimport linkage from './linkage';\nimport ignore from './ignore';\nimport join from './join';\nimport join2 from './join2';\nimport delegate from './delegate';\n\nlet Token = homunculus.getClass('token', 'csx');\nlet Node = homunculus.getClass('node', 'csx');\n\nfunction elem(node, opt, param) {\n  let res = '';\n  //open和selfClose逻辑复用\n  res += selfClose(node.first(), opt, param);\n  res += ',[';\n  let comma = false;\n  for(let i = 1, len = node.size(); i < len - 1; i++) {\n    let leaf = node.leaf(i);\n    switch(leaf.name()) {\n      case Node.CSXChild:\n        if(comma) {\n          res += ',';\n          comma = false;\n        }\n        res += child(leaf, opt, param);\n        comma = true;\n        break;\n      case Node.TOKEN:\n        let s = leaf.token().content();\n        //open和close之间的空白不能忽略\n        if(/^\\s+$/.test(s)) {\n          if(leaf.prev().name() === Node.CSXOpeningElement && leaf.next().name() === Node.CSXClosingElement) {\n            res += '\"' + s.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n\\\\\\n') + '\"';\n          }\n          else {\n            res += s;\n          }\n        }\n        else {\n          if(comma) {\n            res += ',';\n            comma = false;\n          }\n          res += '\"' + s.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n\\\\\\n') + '\"';\n          comma = true;\n        }\n        break;\n      default:\n        if(comma) {\n          res += ',';\n          comma = false;\n        }\n        res += parse(leaf, opt, param);\n        comma = true;\n    }\n  }\n  res += '])';\n  if(node.last().name() === Node.CSXClosingElement) {\n    res += ignore(node.last(), true).res;\n  }\n  return res;\n}\nfunction selfClose(node, opt, param) {\n  let res = '';\n  let name;\n  let first = node.leaf(1);\n  if(first.isToken()) {\n    name = first.token().content();\n  }\n  else if(first.name() === Node.CSXMemberExpression) {\n    name = first.first().token().content();\n    for(let i = 1, len = first.size(); i < len; i++) {\n      name += first.leaf(i).token().content();\n    }\n  }\n  if(/^[A-Z]/.test(name)) {\n    res += 'karas.createCp(';\n    res += name;\n  }\n  else if(/^\\$/.test(name)) {\n    res += 'karas.createGm(';\n    res += '\"' + name + '\"';\n  }\n  else {\n    res += 'karas.createVd(';\n    res += '\"' + name + '\"';\n  }\n  res += ',[';\n  for(let i = 2, len = node.size(); i < len - 1; i++) {\n    let leaf = node.leaf(i);\n    if(i !== 2) {\n      res += ',';\n    }\n    switch(leaf.name()) {\n      case Node.CSXBindAttribute:\n        res += attr(leaf, opt, param);\n        break;\n      case Node.CSXAttribute:\n        res += attr(leaf, opt, param);\n        break;\n      case Node.CSXSpreadAttribute:\n        res += spread(leaf);\n        break;\n    }\n  }\n  res += ']';\n  return res;\n}\nfunction attr(node, opt, param) {\n  let res = '';\n  let key = node.first().token().content();\n  let name = node.parent().leaf(1).token().content();\n  let isCp = /^[A-Z]/.test(name);\n  if(key.charAt(0) === '@') {\n    key = key.slice(1);\n  }\n  // 组件属性非@申明均不bind\n  else if(isCp && opt.isBind) {\n    opt.isBind = false;\n  }\n  let k = '[\"' + key + '\"';\n  res += k + ',';\n  let v = node.last();\n  if(v.isToken()) {\n    v = v.token().content();\n    res += v;\n  }\n  else if(/^on-?[a-zA-Z]/.test(key)) {\n    res += onEvent(v, opt, param);\n  }\n  else {\n    res += child(v, opt, param, true);\n  }\n  res += ']';\n  return res;\n}\nfunction onEvent(node, opt, param) {\n  return delegate(node, param);\n}\nfunction spread(node) {\n  return join(node.leaf(2));\n}\nfunction child(node, opt, param, isAttr) {\n  let callexpr = node.leaf(1);\n  if(opt.isBind) {\n    let temp = linkage(callexpr, param, {\n      arrowFn: opt.arrowFn,\n    });\n    let list = temp.arr;\n    let single = temp.single;\n    let bind = temp.bind;\n    if(list.length) {\n      let listener = list.length === 1\n        ? ('\"' + list[0] + '\"')\n        : JSON.stringify(list);\n      if(isAttr) {\n        let key = node.prev().prev().token().content();\n        if(key === 'value' || key === 'checked' || key === 'selected') {\n          let tag = node.parent().parent().leaf(1).token().content();\n          if(tag === 'input' || tag === 'select' || tag === 'option') {\n            let value = node.leaf(1);\n            // 单独值mmbexpr非运算符双向绑定，其余单向\n            if(value.name() === Node.MMBEXPR) {\n              let v = join2(value);\n              return 'new yurine.Obj('\n                + listener\n                + ',()=>{return('\n                + new InnerTree(opt, param).parse(node).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1')\n                + ')}'\n                + (single ? ',true' : ',false')\n                + (bind ?\n                  (',(v)=>{v!=='\n                  + v\n                  + '&&('\n                  + v\n                  + '=v)})')\n                  : ')');\n            }\n            return 'new yurine.Obj('\n              + listener\n              + ',()=>{return('\n              + new InnerTree(opt, param).parse(node).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1')\n              + ')}'\n              + (single ? ',true' : '')\n              + ')';\n          }\n        }\n      }\n      else if(node.prev() && node.prev().name() === Node.CSXOpeningElement) {\n        let key = node.prev().leaf(1).token().content();\n        if(key === 'textarea') {\n          let value = node.leaf(1);\n          if(value.name() === Node.MMBEXPR) {\n            let v = join2(value);\n            return 'new yurine.Obj('\n              + listener\n              + ',()=>{return('\n              + new InnerTree(opt, param).parse(node).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1')\n              + ')}'\n              + (single ? ',true' : ',false')\n              + (bind ?\n                (',(v)=>{v!=='\n                  + v\n                  + '&&('\n                  + v\n                  + '=v)})')\n                : ')');\n          }\n        }\n      }\n      return 'new yurine.Obj('\n        + listener\n        + ',()=>{return('\n        + new InnerTree(opt, param).parse(node).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1')\n        + ')}'\n        + (single ? ',true' : '')\n        + ')';\n    }\n  }\n  // Obj中再次出现的:input的value还需要添加Obj\n  else if(opt.isInBind) {\n    if(isAttr) {\n      let key = node.prev().prev().token().content();\n      if(key === 'value') {\n        let tag = node.parent().parent().leaf(1).token().content();\n        if(tag === 'input' || tag === 'select') {\n          let temp = linkage(callexpr, param, {\n            arrowFn: opt.arrowFn,\n          });\n          let list = temp.arr;\n          let bind = temp.bind;\n          if(list.length) {\n            let value = node.leaf(1);\n            let listener = list.length === 1\n              ? ('\"' + list[0] + '\"')\n              : JSON.stringify(list);\n            if(value.name() === Node.MMBEXPR) {\n              let v = join2(value);\n              return 'new yurine.Obj('\n                + listener\n                + ',()=>{return('\n                + new InnerTree(opt, param).parse(node).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1')\n                + ')}'\n                + ',false'\n                + (bind ?\n                  (',(v)=>{v!=='\n                    + v\n                    + '&&('\n                    + v\n                    + '=v)})')\n                  : ')');\n            }\n            return 'new yurine.Obj('\n              + listener\n              + ',()=>{return('\n              + new InnerTree(opt, param).parse(node).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1')\n              + ')})';\n\n          }\n        }\n      }\n    }\n    else if(node.prev() && node.prev().name() === Node.CSXOpeningElement) {\n      let key = node.prev().leaf(1).token().content();\n      if(key === 'textarea') {\n        let temp = linkage(callexpr, param, {\n          arrowFn: opt.arrowFn,\n        });\n        let list = temp.arr;\n        let bind = temp.bind;\n        if(list.length) {\n          let value = node.leaf(1);\n          let listener = list.length === 1\n            ? ('\"' + list[0] + '\"')\n            : JSON.stringify(list);\n          if(value.name() === Node.MMBEXPR) {\n            let v = join2(value);\n            return 'new yurine.Obj('\n              + listener\n              + ',()=>{return('\n              + new InnerTree(opt, param).parse(node).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1')\n              + ')}'\n              + ',false'\n              + (bind ?\n                (',(v)=>{v!=='\n                  + v\n                  + '&&('\n                  + v\n                  + '=v)})')\n                : ')');\n          }\n          return 'new yurine.Obj('\n            + listener\n            + ',()=>{return('\n            + new InnerTree(opt, param).parse(node).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1')\n            + ')})';\n        }\n      }\n    }\n  }\n  return new InnerTree(opt, param).parse(node).replace(/^(\\s*){/, '$1').replace(/}(\\s*)$/, '$1');\n}\n\nfunction parse(node, opt, param) {\n  let res = '';\n  switch(node.name()) {\n    case Node.CSXElement:\n      res += elem(node, opt, param);\n      break;\n    case Node.CSXSelfClosingElement:\n      res += selfClose(node, opt, param);\n      res += ')';\n      break;\n  }\n  return res;\n}\n\nexport default parse;\n","import homunculus from 'homunculus';\nimport ignore from './ignore';\nimport InnerTree from './InnerTree';\nimport csx from './csx';\nimport join2 from './join2';\n\nlet Token = homunculus.getClass('token', 'csx');\nlet Node = homunculus.getClass('node', 'csx');\n\nlet res;\n\nfunction stmt(node, param) {\n  recursion(node, param);\n}\n\nfunction recursion(node, param) {\n  if(node.isToken()) {\n    let token = node.token();\n    if(token.isVirtual()) {\n      return;\n    }\n    if(!token.ignore) {\n      res += token.content();\n    }\n    while(token.next()) {\n      token = token.next();\n      if(token.isVirtual() || !ignore.S.hasOwnProperty(token.type())) {\n        break;\n      }\n      if(!token.ignore) {\n        res += token.content();\n      }\n    }\n  }\n  else {\n    switch(node.name()) {\n      case Node.CSXElement:\n      case Node.CSXSelfClosingElement:\n        res += csx(node, { isBind: true, }, param);\n        return;\n      case Node.FNEXPR:\n      case Node.FNDECL:\n      case Node.CLASSEXPR:\n        let tree = new InnerTree();\n        res += tree.parse(node);\n        return;\n    }\n    node.leaves().forEach(function(leaf) {\n      recursion(leaf, param);\n    });\n  }\n}\n\nfunction parse(node, param) {\n  res = '';\n\n  let len = node.size();\n  node.leaves().forEach(function(leaf, i) {\n    //fnbody\n    if(i === len - 2) {\n      leaf.leaves().forEach(function(item) {\n        stmt(item, param);\n      });\n    }\n    else {\n      res += join2(leaf);\n    }\n  });\n  return res;\n}\n\nexport default parse;\n","import homunculus from 'homunculus';\nimport csx from './csx';\nimport ignore from './ignore';\nimport render from './render';\nimport join2 from './join2';\n\nlet Node = homunculus.getClass('node', 'csx');\n\nclass Tree {\n  constructor() {\n    this.res = '';\n  }\n  parse(node) {\n    this.recursion(node, false);\n    return this.res;\n  }\n  recursion(node, inClass) {\n    let self = this;\n    let isToken = node.isToken();\n    if(isToken) {\n      let token = node.token();\n      if(token.isVirtual()) {\n        return;\n      }\n      if(!token.ignore) {\n        this.res += token.content();\n      }\n      while(token.next()) {\n        token = token.next();\n        if(token.isVirtual() || !ignore.S.hasOwnProperty(token.type())) {\n          break;\n        }\n        if(!token.ignore) {\n          this.res += token.content();\n        }\n      }\n    }\n    else {\n      switch(node.name()) {\n        case Node.CSXElement:\n        case Node.CSXSelfClosingElement:\n          this.res += csx(node, {}, this.param);\n          return;\n        case Node.CLASSDECL:\n          inClass = this.klass(node);\n          break;\n        case Node.CLASSEXPR:\n          inClass = this.klass(node);\n          break;\n        case Node.CLASSBODY:\n          if(inClass) {\n            this.param = {\n              getHash: {},\n              setHash: {},\n              evalHash: {},\n              bindHash: {},\n              linkHash: {},\n              linkedHash: {},\n            };\n            this.list(node);\n          }\n          break;\n        case Node.METHOD:\n          let isRender = this.method(node);\n          if(isRender) {\n            this.res += render(node, this.param || {});\n            return;\n          }\n          break;\n        case Node.ANNOT:\n          if(['@bind', '@eval', '@link'].indexOf(node.first().token().content()) > -1) {\n            this.res += ignore(node, true).res;\n          }\n          else {\n            this.res += join2(node);\n          }\n          return;\n        case Node.LEXBIND:\n          if(inClass && node.parent().name() === Node.CLASSELEM) {\n            this.res += this.bindLex(node);\n            return;\n          }\n          break;\n      }\n      node.leaves().forEach(function(leaf) {\n        self.recursion(leaf, inClass);\n      });\n      switch(node.name()) {\n        case Node.FNBODY:\n          this.fnbody(node, inClass);\n          break;\n        case Node.CLASSDECL:\n          inClass = false;\n          break;\n        case Node.CLASSEXPR:\n          inClass = false;\n          break;\n      }\n    }\n  }\n  klass(node) {\n    let heritage = node.leaf(2);\n    if(heritage && heritage.name() === Node.HERITAGE) {\n      let body = node.last().prev();\n      let leaves = body.leaves();\n      for(let i = 0, len = leaves.length; i < len; i++) {\n        let leaf = leaves[i];\n        let method = leaf.first();\n        if(method.name() === Node.METHOD) {\n          let first = method.first();\n          if(first.name() === Node.PROPTNAME) {\n            let id = first.first();\n            if(id.name() === Node.LTRPROPT) {\n              id = id.first();\n              if(id.isToken()) {\n                id = id.token().content();\n                if(id === 'constructor') {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n  method(node) {\n    let first = node.first();\n    if(first.name() === Node.PROPTNAME) {\n      first = first.first();\n      if(first.name() === Node.LTRPROPT) {\n        first = first.first();\n        if(first.isToken() && first.token().content() === 'render') {\n          return true;\n        }\n      }\n    }\n  }\n  fnbody(node, inClass) {\n    if(!inClass) {\n      return;\n    }\n    let parent = node.parent();\n    if(parent.name() === Node.METHOD) {\n      let setV;\n      let first = parent.first();\n      if(first.isToken() && first.token().content() === 'set') {\n        let fmparams = parent.leaf(3);\n        if(fmparams && fmparams.name() === Node.FMPARAMS) {\n          let single = fmparams.first();\n          if(single && single.name() === Node.SINGLENAME) {\n            let bindid = single.first();\n            if(bindid && bindid.name() === Node.BINDID) {\n              setV = bindid.first().token().content();\n            }\n          }\n        }\n        let name = parent.leaf(1).first().first().token().content();\n        let prev = parent.parent().prev();\n        let ids = [];\n        if(prev) {\n          prev = prev.first();\n          if (prev.name() === Node.ANNOT && ['@bind', '@eval'].indexOf(prev.first().token().content()) > -1) {\n            ids.push(name);\n          }\n        }\n        ids = ids.concat(this.param.linkedHash[name] || []);\n        if(ids.length) {\n          if(setV) {\n            if(ids.length === 1) {\n              this.res += ';this.__array(\"';\n              this.res += ids[0] + '\",';\n              this.res += setV;\n              this.res += ')';\n            }\n            else {\n              this.res += ';this.__array([\"';\n              this.res += ids.join('\",\"') + '\"],';\n              this.res += setV;\n              this.res += ')';\n            }\n          }\n          if(ids.length === 1) {\n            this.res += ';this.__data(\"';\n            this.res += ids[0];\n            this.res += '\")';\n          }\n          else {\n            this.res += ';this.__data([\"';\n            this.res += ids.join('\",\"');\n            this.res += '\"])';\n          }\n        }\n      }\n    }\n  }\n  list(node) {\n    let leaves = node.leaves();\n    let length = leaves.length;\n    for(let i = 0; i < length; i++) {\n      let item = leaves[i].first();\n      if(item.name() === Node.ANNOT) {\n        let annot = item.first().token().content();\n        let method = leaves[i+1] ? leaves[i+1].first() : null;\n        if(method && method.name() === Node.METHOD) {\n          let first = method.first();\n          if(first.isToken()) {\n            let token = first.token().content();\n            if(token === 'set' && annot === '@bind') {\n              let name = first.next().first().first().token().content();\n              this.param.bindHash[name] = true;\n            }\n            else if(token === 'set' && annot === '@eval') {\n              let name = first.next().first().first().token().content();\n              this.param.evalHash[name] = true;\n            }\n            else if(token === 'get' && annot === '@link') {\n              let name = first.next().first().first().token().content();\n              this.param.linkHash[name] = this.param.linkHash[name] || [];\n              let params = item.leaf(2);\n              if(params && params.name() === Node.FMPARAMS) {\n                params.leaves().forEach(function(param) {\n                  if(param.name() === Node.SINGLENAME) {\n                    param = param.first();\n                    if(param.name() === Node.BINDID) {\n                      param = param.first();\n                      if(param.isToken()) {\n                        param = param.token().content();\n                        this.param.linkHash[name].push(param);\n                        this.param.linkedHash[param] = this.param.linkedHash[param] || [];\n                        this.param.linkedHash[param].push(name);\n                      }\n                    }\n                  }\n                }.bind(this));\n              }\n            }\n          }\n        }\n        else if(method && method.name() === Node.LEXBIND) {\n          let first = method.first();\n          if(first.name() === Node.BINDID) {\n            let name = first.first().token().content();\n            parseLex(this.param, name, item, annot);\n          }\n        }\n        //连续2个\n        else if(method && method.name() === Node.ANNOT) {\n          let item2 = method;\n          let annot2 = method.first().token().content();\n          method = leaves[i+2] ? leaves[i+2].first() : null;\n          if(method && method.name() === Node.LEXBIND) {\n            let first = method.first();\n            if(first.name() === Node.BINDID) {\n              let name = first.first().token().content();\n              parseLex(this.param, name, item, annot);\n              parseLex(this.param, name, item2, annot2);\n            }\n          }\n        }\n      }\n      else if(item.name() === Node.METHOD) {\n        let first = item.first();\n        if(first.isToken()) {\n          let token = first.token().content();\n          let name = first.next().first().first().token().content();\n          if(token === 'get') {\n            this.param.getHash[name] = true;\n          }\n          else if(token === 'set') {\n            this.param.setHash[name] = true;\n          }\n        }\n      }\n      else if(item.name() === Node.LEXBIND) {\n        let first = item.first();\n        if(first.name() === Node.BINDID) {\n          let name = first.first().token().content();\n          this.param.getHash[name] = true;\n          this.param.setHash[name] = true;\n        }\n      }\n    }\n  }\n  bindLex(node) {\n    let parent = node.parent();\n    let bindid = node.first();\n    if(bindid.name() === Node.BINDID) {\n      let token = bindid.first();\n      let name = token.token().content();\n      let init = node.leaf(1);\n\n      let ids = [];\n      let prev = parent.prev();\n      if(prev) {\n        prev = prev.first();\n        if(prev.name() === Node.ANNOT && ['@bind', '@eval'].indexOf(prev.first().token().content()) > -1) {\n          ids.push(name);\n        }\n      }\n      ids = ids.concat(this.param.linkedHash[name] || []);\n\n      let s = '';\n      s += 'set ' + name + '(v){';\n      s += 'this.__setBind(\"' + name + '\",v)';\n      if(ids.length) {\n        if(ids.length === 1) {\n          s += ';this.__data(\"';\n          s += ids[0];\n          s += '\")';\n        }\n        else {\n          s += ';this.__data([\"';\n          s += ids.join('\",\"');\n          s += '\"])';\n        }\n      }\n      s += '}get ' + name + '(){';\n      s += ignore(token).res;\n      if(init) {\n        s += 'if(this.__initBind(\"' + name + '\"))';\n        s += 'this.__setBind(\"' + name + '\",';\n        s += ignore(init.first()).res;\n        s += join2(init.last());\n        s += ');';\n      }\n      s += 'return this.__getBind(\"' + name + '\")}';\n      return s;\n    }\n  }\n}\n\nfunction parseLex(param, name, item, annot) {\n  if(annot === '@bind') {\n    param.bindHash[name] = true;\n  }\n  else if(annot === '@eval') {\n    param.evalHash[name] = true;\n  }\n  else if(annot === '@link') {\n    param.linkHash[name] = param.linkHash[name] || [];\n    let params = item.leaf(2);\n    if(params && params.name() === Node.FMPARAMS) {\n      params.leaves().forEach(function(item) {\n        if(item.name() === Node.SINGLENAME) {\n          item = item.first();\n          if(item.name() === Node.BINDID) {\n            item = item.first();\n            if(item.isToken()) {\n              item = item.token().content();\n              param.linkHash[name].push(item);\n              param.linkedHash[item] = param.linkedHash[item] || [];\n              param.linkedHash[item].push(name);\n            }\n          }\n        }\n      });\n    }\n  }\n}\n\nexport default Tree;\n","import homunculus from 'homunculus';\nimport Tree from './Tree';\n\nclass Yurine {\n  constructor() {\n    this.parser = null;\n    this.node = null;\n  }\n  parse(code) {\n    this.parser = homunculus.getParser('csx');\n    this.node = this.parser.parse(code);\n    let tree = new Tree();\n    return tree.parse(this.node);\n  }\n  tokens() {\n    return this.ast ? this.parser.lexer.tokens() : null;\n  }\n  ast() {\n    return this.node;\n  }\n\n  static parse(code) {\n    return new Yurine().parse(code);\n  }\n}\n\nexport default new Yurine();\n"],"names":["ES6Token","homunculus","getClass","Token","Node","S","LINE","COMMENT","BLANK","res","append","ignore","node","includeLine","isVirtual","next","hasOwnProperty","type","s","content","isToken","token","leaves","forEach","leaf","parse","param","opt","name","EXPRSTMT","linkage","first","arr","item","VARSTMT","i","initlz","temp","BLOCKSTMT","block","length","IFSTMT","condition","last","ITERSTMT","peek","LEXDECL","second","third","blockstmt","stmt","RETSTMT","arrowFn","allReturn","len","WITHSTMT","SWCHSTMT","caseblock","CASEBLOCK","CASECLAUSE","expr","DFTCLAUSE","EXPR","PRMREXPR","MMBEXPR","mmbexpr","CNDTEXPR","LOGOREXPR","LOGANDEXPR","BITANDEXPR","BITOREXPR","BITXOREXPR","EQEXPR","RELTEXPR","SHIFTEXPR","ADDEXPR","MTPLEXPR","UNARYEXPR","NEWEXPR","POSTFIXEXPR","CALLEXPR","callexpr","ARRLTR","arrltr","CPEAPL","cpeapl","ARGS","ARGLIST","TEMPLATE","ARROWFN","parent","prev","body","push","arrowfn","pop","CSXElement","CSXSelfClosingElement","CSXOpeningElement","CSXAttribute","value","CSXAttributeValue","CSXChild","prmr","me","dot","id","STRING","val","bracket","args","size","Object","keys","bind","filter","indexOf","getHash","bindHash","evalHash","linkHash","single","slice","recursion","excludeLine","InnerTree","self","csx","isInBind","isBind","list","listener","JSON","stringify","join2","replace","is","JsNode","word","TOKEN","VIRTUAL","ID","NUMBER","KEYWORD","charAt","objltr","tree","elem","selfClose","comma","child","test","CSXClosingElement","CSXMemberExpression","CSXBindAttribute","attr","CSXSpreadAttribute","spread","key","isCp","k","v","onEvent","delegate","join","isAttr","tag","FNEXPR","FNDECL","CLASSEXPR","Tree","inClass","CLASSDECL","klass","CLASSBODY","setHash","linkedHash","METHOD","isRender","method","render","ANNOT","LEXBIND","CLASSELEM","bindLex","FNBODY","fnbody","heritage","HERITAGE","PROPTNAME","LTRPROPT","setV","fmparams","FMPARAMS","SINGLENAME","bindid","BINDID","ids","concat","annot","params","parseLex","item2","annot2","init","Yurine","parser","code","getParser","ast","lexer","tokens"],"mappings":"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"}